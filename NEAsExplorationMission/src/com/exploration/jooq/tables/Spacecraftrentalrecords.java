/*
 * This file is generated by jOOQ.
*/
package com.exploration.jooq.tables;


import com.exploration.jooq.Db21;
import com.exploration.jooq.Indexes;
import com.exploration.jooq.Keys;
import com.exploration.jooq.tables.records.SpacecraftrentalrecordsRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Spacecraftrentalrecords extends TableImpl<SpacecraftrentalrecordsRecord> {

    private static final long serialVersionUID = -659593095;

    /**
     * The reference instance of <code>db21.SpacecraftRentalRecords</code>
     */
    public static final Spacecraftrentalrecords SPACECRAFTRENTALRECORDS = new Spacecraftrentalrecords();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SpacecraftrentalrecordsRecord> getRecordType() {
        return SpacecraftrentalrecordsRecord.class;
    }

    /**
     * The column <code>db21.SpacecraftRentalRecords.AgencyName</code>.
     */
    public final TableField<SpacecraftrentalrecordsRecord, String> AGENCYNAME = createField("AgencyName", org.jooq.impl.SQLDataType.CHAR(4).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>db21.SpacecraftRentalRecords.ModelId</code>.
     */
    public final TableField<SpacecraftrentalrecordsRecord, String> MODELID = createField("ModelId", org.jooq.impl.SQLDataType.CHAR(4).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>db21.SpacecraftRentalRecords.SpacecraftIndex</code>.
     */
    public final TableField<SpacecraftrentalrecordsRecord, Integer> SPACECRAFTINDEX = createField("SpacecraftIndex", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db21.SpacecraftRentalRecords.CheckoutDate</code>.
     */
    public final TableField<SpacecraftrentalrecordsRecord, Date> CHECKOUTDATE = createField("CheckoutDate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>db21.SpacecraftRentalRecords.ReturnDate</code>.
     */
    public final TableField<SpacecraftrentalrecordsRecord, Date> RETURNDATE = createField("ReturnDate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>db21.SpacecraftRentalRecords</code> table reference
     */
    public Spacecraftrentalrecords() {
        this(DSL.name("SpacecraftRentalRecords"), null);
    }

    /**
     * Create an aliased <code>db21.SpacecraftRentalRecords</code> table reference
     */
    public Spacecraftrentalrecords(String alias) {
        this(DSL.name(alias), SPACECRAFTRENTALRECORDS);
    }

    /**
     * Create an aliased <code>db21.SpacecraftRentalRecords</code> table reference
     */
    public Spacecraftrentalrecords(Name alias) {
        this(alias, SPACECRAFTRENTALRECORDS);
    }

    private Spacecraftrentalrecords(Name alias, Table<SpacecraftrentalrecordsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Spacecraftrentalrecords(Name alias, Table<SpacecraftrentalrecordsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Db21.DB21;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SPACECRAFTRENTALRECORDS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SpacecraftrentalrecordsRecord> getPrimaryKey() {
        return Keys.KEY_SPACECRAFTRENTALRECORDS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SpacecraftrentalrecordsRecord>> getKeys() {
        return Arrays.<UniqueKey<SpacecraftrentalrecordsRecord>>asList(Keys.KEY_SPACECRAFTRENTALRECORDS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SpacecraftrentalrecordsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SpacecraftrentalrecordsRecord, ?>>asList(Keys.SPACECRAFTRENTALRECORDS_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Spacecraftrentalrecords as(String alias) {
        return new Spacecraftrentalrecords(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Spacecraftrentalrecords as(Name alias) {
        return new Spacecraftrentalrecords(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Spacecraftrentalrecords rename(String name) {
        return new Spacecraftrentalrecords(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Spacecraftrentalrecords rename(Name name) {
        return new Spacecraftrentalrecords(name, null);
    }
}
