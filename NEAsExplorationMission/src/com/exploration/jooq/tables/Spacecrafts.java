/*
 * This file is generated by jOOQ.
*/
package com.exploration.jooq.tables;


import com.exploration.jooq.Db21;
import com.exploration.jooq.Indexes;
import com.exploration.jooq.Keys;
import com.exploration.jooq.tables.records.SpacecraftsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Spacecrafts extends TableImpl<SpacecraftsRecord> {

    private static final long serialVersionUID = -2114298777;

    /**
     * The reference instance of <code>db21.Spacecrafts</code>
     */
    public static final Spacecrafts SPACECRAFTS = new Spacecrafts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SpacecraftsRecord> getRecordType() {
        return SpacecraftsRecord.class;
    }

    /**
     * The column <code>db21.Spacecrafts.AgencyName</code>.
     */
    public final TableField<SpacecraftsRecord, String> AGENCYNAME = createField("AgencyName", org.jooq.impl.SQLDataType.CHAR(4).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>db21.Spacecrafts.ModelId</code>.
     */
    public final TableField<SpacecraftsRecord, String> MODELID = createField("ModelId", org.jooq.impl.SQLDataType.CHAR(4).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>db21.Spacecrafts.Count</code>.
     */
    public final TableField<SpacecraftsRecord, Integer> COUNT = createField("Count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db21.Spacecrafts.DayCharge</code>.
     */
    public final TableField<SpacecraftsRecord, Integer> DAYCHARGE = createField("DayCharge", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db21.Spacecrafts.MaxTripTime</code>.
     */
    public final TableField<SpacecraftsRecord, Integer> MAXTRIPTIME = createField("MaxTripTime", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db21.Spacecrafts.MaxTripEnergy</code>.
     */
    public final TableField<SpacecraftsRecord, Double> MAXTRIPENERGY = createField("MaxTripEnergy", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>db21.Spacecrafts.MaxCapacity</code>.
     */
    public final TableField<SpacecraftsRecord, Integer> MAXCAPACITY = createField("MaxCapacity", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db21.Spacecrafts.Type</code>.
     */
    public final TableField<SpacecraftsRecord, String> TYPE = createField("Type", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * Create a <code>db21.Spacecrafts</code> table reference
     */
    public Spacecrafts() {
        this(DSL.name("Spacecrafts"), null);
    }

    /**
     * Create an aliased <code>db21.Spacecrafts</code> table reference
     */
    public Spacecrafts(String alias) {
        this(DSL.name(alias), SPACECRAFTS);
    }

    /**
     * Create an aliased <code>db21.Spacecrafts</code> table reference
     */
    public Spacecrafts(Name alias) {
        this(alias, SPACECRAFTS);
    }

    private Spacecrafts(Name alias, Table<SpacecraftsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Spacecrafts(Name alias, Table<SpacecraftsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Db21.DB21;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SPACECRAFTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SpacecraftsRecord> getPrimaryKey() {
        return Keys.KEY_SPACECRAFTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SpacecraftsRecord>> getKeys() {
        return Arrays.<UniqueKey<SpacecraftsRecord>>asList(Keys.KEY_SPACECRAFTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Spacecrafts as(String alias) {
        return new Spacecrafts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Spacecrafts as(Name alias) {
        return new Spacecrafts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Spacecrafts rename(String name) {
        return new Spacecrafts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Spacecrafts rename(Name name) {
        return new Spacecrafts(name, null);
    }
}
