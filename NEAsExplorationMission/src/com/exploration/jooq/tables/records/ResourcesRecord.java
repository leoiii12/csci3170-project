/*
 * This file is generated by jOOQ.
*/
package com.exploration.jooq.tables.records;


import com.exploration.jooq.tables.Resources;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourcesRecord extends UpdatableRecordImpl<ResourcesRecord> implements Record3<String, Double, Double> {

    private static final long serialVersionUID = -1959035203;

    /**
     * Setter for <code>db21.Resources.Type</code>.
     */
    public void setType(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>db21.Resources.Type</code>.
     */
    public String getType() {
        return (String) get(0);
    }

    /**
     * Setter for <code>db21.Resources.Density</code>.
     */
    public void setDensity(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>db21.Resources.Density</code>.
     */
    public Double getDensity() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>db21.Resources.Value</code>.
     */
    public void setValue(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>db21.Resources.Value</code>.
     */
    public Double getValue() {
        return (Double) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Double, Double> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Double, Double> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Resources.RESOURCES.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return Resources.RESOURCES.DENSITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Resources.RESOURCES.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component2() {
        return getDensity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getDensity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourcesRecord value1(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourcesRecord value2(Double value) {
        setDensity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourcesRecord value3(Double value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourcesRecord values(String value1, Double value2, Double value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResourcesRecord
     */
    public ResourcesRecord() {
        super(Resources.RESOURCES);
    }

    /**
     * Create a detached, initialised ResourcesRecord
     */
    public ResourcesRecord(String type, Double density, Double value) {
        super(Resources.RESOURCES);

        set(0, type);
        set(1, density);
        set(2, value);
    }
}
